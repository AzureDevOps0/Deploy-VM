trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
      displayName: Install-Terraform
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      displayName: Initialize-Provider
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'deploy-Vm'
        backendAzureRmResourceGroupName: 'Safi_rg'
        backendAzureRmStorageAccountName: 'tfstatefilessacloud'
        backendAzureRmContainerName: 'tfstatefile'
        backendAzureRmKey: 'terraform.tfstatefile'
    - task: TerraformTaskV4@4
      displayName: Plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'deploy-Vm'
    - script: echo "Copy files to staging directory" && cp -r $(Build.SourcesDirectory)/* $(Build.ArtifactStagingDirectory)
      displayName: 'Copy files to staging directory'
    - script: ls -la $(Build.ArtifactStagingDirectory)
      displayName: 'List files in staging directory'
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'terraform-config'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployToProduction
    displayName: 'Deploy to Production'
    environment: 'Approvers' # Reference to the environment with the approval
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: terraform-config
          - script: ls -la $(Pipeline.Workspace)/terraform-config
            displayName: 'List extracted files'
          - script: cd $(Pipeline.Workspace)/terraform-config && terraform apply -auto-approve
            displayName: Apply Terraform Configuration
